name: DEV
on:
  workflow_dispatch:
  repository_dispatch:
    types: [backend, frontend] # workflow is only triggered after when frontend/backend passes their CI

concurrency: # only run 1 instance
  group: dev-deploy
  cancel-in-progress: true

jobs:

  # deploy frontend to dev
  deploy-vercel:
    name: Deploy frontend to vercel
    runs-on: ubuntu-latest
    environment:
      name: web DEV
      url: ${{ steps.deploy-vercel-dev.outputs.preview-url }}
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v2
        with:
          repository: johnshift/multirepo-frontend
          ref: 'dev'
      # - name: Install pnpm
      #   uses: pnpm/action-setup@v2.0.1
      #   with:
      #     version: 6
      # - name: Setup Node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '14'
      #     cache: 'pnpm'
      # - name: Build
      #   run: pnpm install --frozen-lockfile && pnpm build
      - name: "Deploy to vercel dev"
        # run: curl -X POST ${{ secrets.VERCEL_DEPLOY_HOOK }}
        uses: amondnet/vercel-action@v20
        id: deploy-vercel
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          vercel-org-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # vercel-args: '--prod'
        # run: npx vercel --token ${VERCEL_TOKEN} --prod
  

  # end-to-end-tests:
  #   name: End-to-end Tests
  #   runs-on: ubuntu-latest
  #   needs: [deploy-vercel]
    

  # end-to-end-local:
  #   name:  End-to-End Test Local
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: 'dev'
  #         submodules: true
  #     - uses: fregante/setup-git-user@v1

  #     - name: Init submodules
  #       run: bash init-submodules.sh

  #     - name: Setup Java
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'adopt'
  #         java-version: '11'
  #         cache: 'maven'

  #     - name: Build Backend
  #       working-directory: ./backend
  #       run: mvn clean install -DskipTests

  #     - name: Setup Frontend
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #         cache: 'npm'
  #         cache-dependency-path: frontend/yarn.lock

  #     - name: Install Yarn
  #       run: npm install -g yarn

  #     - name: Compile Frontend
  #       working-directory: ./frontend
  #       run: yarn install && yarn build

  #     - name: Run End-to-End Tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         start: yarn start
  #         working-directory: ./frontend
  #         wait-on: "http://localhost:5000"
  #         wait-on-timeout: 30
  #         browser: chrome
  #         headless: true

  #     - name: Save changes (if any) to dev branch
  #       uses: EndBug/add-and-commit@v7
  #       with:
  #         branch: dev
  #         message: 'updated branch dev from workflow'

  # deploy-vercel:
  #   name: Deploy frontend to vercel
  #   runs-on: ubuntu-latest
  #   needs: [end-to-end-local]
  #   steps:
  #     - name: Checkout frontend repository
  #       uses: actions/checkout@v2
  #       with:
  #         repository: johnshift/multirepo-frontend
  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14'
  #         registry-url: https://registry.npmjs.org/
  #     - name: "Deploy to vercel"
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #       run: npx vercel --token ${VERCEL_TOKEN} --prod

  # deploy-heroku:
  #   name: Deploy to heroku
  #   runs-on: ubuntu-latest
  #   needs: [end-to-end-local]
  #   steps:
  #     - name: Checkout frontend repository
  #       uses: actions/checkout@v2
  #       with:
  #         repository: johnshift/multirepo-backend
  #     - name: Setup Java
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'adopt'
  #         java-version: '11'
  #         cache: 'maven'
  #     - name: Build Backend
  #       run: mvn clean install -DskipTests
  #     - name: Deploy to Heroku
  #       uses: AkhileshNS/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_email: ${{ secrets.HEROKU_EMAIL }}
  #         heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  
  # merge-to-staging:
  #   name: Merge dev branch to staging
  #   runs-on: ubuntu-latest
  #   needs: [deploy-vercel, deploy-heroku]
  #   steps:
  #     - name: Checkout Branch
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #         token: ${{ secrets.PAT }}
  #     - uses: fregante/setup-git-user@v1
  #     - name: Merge
  #       run: |
  #         git checkout staging
  #         git merge dev --commit -m 'merge dev -> staging' 
  #         git push origin staging